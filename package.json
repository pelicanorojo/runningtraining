{
  "name": "runningtraining",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "help": "cd COMPOSE_SETUP && bash manage.sh npmCheatSheet",

    "// Commands used by hosting (Vercel) ":  "",
    "build": "prisma migrate deploy && next build",
    "postinstall": "prisma generate",

    "// Commands with dockerized services ":  "",
    "docks:up": "cd COMPOSE_SETUP && docker compose --env-file .env.local up #starts db & node ",

    "// Commands with dockerized NEXTJS frequents":  "",
    "nx:start": "cd COMPOSE_SETUP && docker compose --env-file .env.local up nextjs -d",
    "nx:dev": "cd COMPOSE_SETUP && docker compose exec -T nextjs npm run dev",
    "nx:restart": "npm run nx:devstop; npm run nx:stop && npm run nx:start && npm run nx:dev",
    "// Commands with dockerized NEXTJS less frequent":  "",
    "nx:devstop": "cd COMPOSE_SETUP && docker compose exec -T nextjs sh -c 'pkill -SIGTERM \"next-server\"'", 
    "nx:stop": "cd COMPOSE_SETUP && docker compose --env-file .env.local down nextjs",
    "nx:setup": "cd COMPOSE_SETUP && bash manage.sh npmAndPrismaInstallGenerate",
    "nx:sh": "cd COMPOSE_SETUP && docker compose exec nextjs sh",
    "nx:pris:mig": "cd COMPOSE_SETUP && docker compose exec -T  nextjs sh -c 'DATABASE_URL=\"$DATABASE_MIGR_URL\" npx prisma migrate dev'",  
    "nx:pris:gen": "cd COMPOSE_SETUP && docker compose exec -T nextjs npx prisma generate",
    "nx:pris:std": "cd COMPOSE_SETUP && docker compose exec -T nextjs sh -c 'DATABASE_URL=\"$DATABASE_MIGR_URL\" npx prisma studio'",

    "// Commands with dockerized DB frequents":  "",
    "db:start": "cd COMPOSE_SETUP && docker compose --env-file .env.local up -d postgres",
    "db:stop": "cd COMPOSE_SETUP && docker compose --env-file .env.local down postgres",
    "db:check": "docker exec -i marathon_pg pg_isready -U pgadmin -d marathon_db",

    "// Commands with dockerized DB less frequents":  "",
    "db:createInitSQL": "cd COMPOSE_SETUP && docker compose exec -T postgres sh ./compose-setup/pgusers-init.sh",
    "db:removeInitSQL": "cd COMPOSE_SETUP && docker compose exec -T postgres sh -c 'rm ./compose-setup/temporal/init.sql'",
    "db:pullimg": "cd COMPOSE_SETUP && docker compose --env-file .env.local  pull",
    "db:sh": "cd COMPOSE_SETUP && docker compose exec postgres sh",
    "db:psqlHelp": "cd COMPOSE_SETUP && bash manage.sh dbPSqlCheatSheet",
    "db:psql": "docker exec -it marathon_pg psql -U pgadmin  -d marathon_db",

    "// Commands with dockerized DB dangerous":  "",
    "db:setup": "ENABL=t; if [ \"$ENABL\" = \"f\" ]; then echo disabled; exit 0; else echo enabled; fi && cd COMPOSE_SETUP && bash manage.sh dbSetup && docker compose --env-file .env.local up postgres",
    "db:clean": "ENABL=t; if [ \"$ENABL\" = \"f\" ]; then echo disabled; exit 0; else echo enabled; fi && cd COMPOSE_SETUP && docker compose --env-file .env.local down -v && docker volume prune -f && bash manage.sh dbClean",

    "// Pending commands to adapt:": "",
    "nx:lint": "cd COMPOSE_SETUP && docker compose exec -T nextjs npm run lint",
    "nx:test": "cd COMPOSE_SETUP && docker compose exec -T nextjs npm run test",
    "nx:watch": "cd COMPOSE_SETUP && docker compose exec -T nextjs npm run test:watch",
    "nx:changes": "cd COMPOSE_SETUP && docker compose exec -T nextjs npm run test:changes",
    
    "// Internal scripts for the container (used by the above commands)": "",
    "dev": "next dev # use with nx:dev, not directly",
    "lint": "next lint",
    "test": "clear; jest",
    "test:watch": "clear; jest --watch --coverage --detectOpenHandles",
    "test:changes": "clear; jest --watch --onlyChanged --detectOpenHandles"
  },
  "dependencies": {
    "@auth/prisma-adapter": "2.10.0",
    "@prisma/client": "6.13.0",
    "@radix-ui/react-avatar": "1.1.10",
    "@radix-ui/react-dialog": "1.1.14",
    "@radix-ui/react-scroll-area": "1.2.9",
    "@radix-ui/react-select": "2.2.5",
    "@radix-ui/react-slot": "1.2.3",
    "class-variance-authority": "0.7.1",
    "clsx": "2.1.1",
    "lucide-react": "0.536.0",
    "next": "14.2.31",
    "next-auth": "5.0.0-beta.29",
    "next-intl": "3.26.5",
    "react": "18",
    "react-dom": "18",
    "tailwind-merge": "2.6.0",
    "tailwindcss-animate": "1.0.7",
    "zustand": "5.0.7"
  },
  "devDependencies": {
    "@testing-library/jest-dom": "6.6.4",
    "@testing-library/react": "16.3.0",
    "@types/jest": "29.5.14",
    "@types/node": "20",
    "@types/react": "18",
    "@types/react-dom": "18",
    "dotenv-cli": "8.0.0",
    "eslint": "8",
    "eslint-config-next": "14.2.31",
    "eslint-plugin-jest-dom": "5.5.0",
    "eslint-plugin-testing-library": "6.5.0",
    "jest": "29.7.0",
    "jest-environment-jsdom": "29.7.0",
    "jest-fetch-mock": "3.0.3",
    "postcss": "8",
    "prettier": "3.6.2",
    "prettier-plugin-tailwindcss": "0.6.14",
    "prisma": "6.13.0",
    "tailwindcss": "3.4.17",
    "ts-node": "10.9.2",
    "typescript": "5"
  }
}
