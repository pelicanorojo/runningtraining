-- NOTE: assumed names which don't need " :)
-- Create app schema
CREATE SCHEMA ${APP_SCHEMA_NAME};
CREATE SCHEMA ${APP_SCHEMA_NAME}_ctrl; -- for no prisma control

-- Create migration user (for Prisma migrations)
CREATE USER ${POSTGRES_MIGRATION_USER} WITH PASSWORD '${POSTGRES_MIGRATION_PASSWORD}';
GRANT CONNECT, TEMPORARY, CREATE ON DATABASE ${POSTGRES_DB} TO ${POSTGRES_MIGRATION_USER};
GRANT USAGE, CREATE ON SCHEMA ${APP_SCHEMA_NAME} TO ${POSTGRES_MIGRATION_USER};
ALTER USER ${POSTGRES_MIGRATION_USER} WITH CREATEDB;

-- Create app user (limited permissions)
CREATE USER ${POSTGRES_APP_USER} WITH PASSWORD '${POSTGRES_APP_PASSWORD}';
GRANT CONNECT ON DATABASE ${POSTGRES_DB} TO ${POSTGRES_APP_USER};
GRANT USAGE ON SCHEMA ${APP_SCHEMA_NAME} TO ${POSTGRES_APP_USER};
-- Grant SELECT, INSERT, UPDATE, DELETE on all NextAuth tables to ${POSTGRES_APP_USER}
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA ${APP_SCHEMA_NAME} TO ${POSTGRES_APP_USER};

-- If you're using sequences (e.g., for auto-increment IDs), also grant USAGE on sequences
GRANT USAGE ON ALL SEQUENCES IN SCHEMA ${APP_SCHEMA_NAME} TO ${POSTGRES_APP_USER};

-- Create the table for signal initialization complete
CREATE TABLE ${APP_SCHEMA_NAME}_ctrl.dontdropthisinittable AS SELECT 1 AS x;